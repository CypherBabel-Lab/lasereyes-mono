name: Release

on:
  push:
    branches:
      - dev
      - main
    paths:
      - 'packages/**'
      - '.changeset/**'
      - 'package.json'
      - 'pnpm-lock.yaml'

permissions:
  contents: write
  pull-requests: write

jobs:
  # Add a check job that determines if we should proceed
  check-changesets:
    runs-on: ubuntu-latest
    outputs:
      has_changesets: ${{ steps.check.outputs.has_changesets }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Check for changesets
        id: check
        run: |
          if [ -d ".changeset" ] && [ "$(find .changeset -name "*.md" -not -name "README.md" -not -name "config.json" | wc -l)" -gt 0 ]; then
            echo "has_changesets=true" >> $GITHUB_OUTPUT
          else
            echo "has_changesets=false" >> $GITHUB_OUTPUT
          fi

  release:
    needs: check-changesets
    if: needs.check-changesets.outputs.has_changesets == 'true'
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.6

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build --filter="@omnisat/*"

      - name: Setup npmrc
        shell: bash
        run: |
          {
            echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"
            echo "registry=https://registry.npmjs.org/"
            echo "always-auth=true"
          } > .npmrc

      # Dev branch - Publish to next tag
      - name: Version, Publish 'next' tag, Commit and Push (dev)
        if: github.ref == 'refs/heads/dev'
        shell: bash
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # First version update
          pnpm run version-prerelease
          pnpm build --filter="@omnisat/*"
          
          # Commit version changes first to get clean state, excluding .npmrc
          git add "package.json" "packages/**/package.json" "pnpm-lock.yaml"
          if [ -d ".changeset" ] && [ "$(find .changeset -name "*.md" -not -name "README.md" -not -name "config.json" | wc -l)" -gt 0 ]; then
            git add ".changeset/**/*"
          fi
          git commit -m "chore: update versions [skip ci]" || echo "No changes to commit"
          
          # Now publish with clean working tree
          pnpm config set publish-branch dev
          pnpm publish -r --tag next --access public
          
          # Push everything including tags after successful publish
          git push --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Main branch - Version and Publish Latest
      - name: Version and Publish Latest (main)
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # First version update
          pnpm run version
          pnpm build --filter="@omnisat/*"
          
          # Commit version changes first to get clean state, excluding .npmrc
          git add "package.json" "packages/**/package.json" "pnpm-lock.yaml"
          if [ -d ".changeset" ] && [ "$(find .changeset -name "*.md" -not -name "README.md" -not -name "config.json" | wc -l)" -gt 0 ]; then
            git add ".changeset/**/*"
          fi
          git commit -m "chore: update versions [skip ci]" || echo "No changes to commit"
          
          # Now publish with clean working tree
          pnpm publish -r --tag latest --access public
          
          # Push everything including tags after successful publish
          git push --follow-tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
