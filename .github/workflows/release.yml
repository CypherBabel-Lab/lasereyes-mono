name: Release

on:
  push:
    branches:
      - dev
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.6.6

      - name: Install dependencies
        run: pnpm install --frozen-lockfile


      - name: Build packages
        run: pnpm build --filter="@omnisat/*"

      - name: Setup npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "always-auth=true" >> .npmrc

      # Dev branch - Publish to next tag
      - name: Version, Publish 'next' tag, Commit and Push (dev)
        if: github.ref == 'refs/heads/dev'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          # Check if there are any changesets
          if [ -d ".changeset" ] && [ "$(ls -A .changeset)" ]; then
            # Only version and publish if there are actual changes
            pnpm run version-prerelease
            
            # Build only changed packages
            pnpm build --filter="[HEAD^1]"
            
            # Commit version changes first to get clean state
            git add .
            git commit -m "chore: update versions [skip ci]" || echo "No changes to commit"
            
            # Now publish only changed packages
            pnpm config set publish-branch dev
            pnpm publish -r --tag next --access public --filter="[HEAD^1]"
            
            # Push everything including tags after successful publish
            git push --follow-tags
          else
            echo "No changesets found - skipping version and publish"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Main branch - Version and Publish Latest
      - name: Version and Publish Latest (main)
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          pnpm run version
          pnpm build --filter="@omnisat/*"
          git add .
          git commit -m "chore: update versions [skip ci]" || echo "No changes to commit"
          git push --follow-tags
          pnpm publish -r --tag latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
